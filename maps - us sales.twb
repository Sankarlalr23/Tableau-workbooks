<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <GroupAction />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (orders)' inline='true' name='federated.1mck8151ye9a3q1gquonh1414bra' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='orders' name='excel-direct.1k0c5p00b8v83912sqj0m1xjl1iq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/RUPANJALI/Desktop/0.Data_Science/03.Tableu/Data/orders.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1k0c5p00b8v83912sqj0m1xjl1iq' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area wise sales' datatype='real' name='[Calculation_95138545437102081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [state set] THEN [Sales] END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <group caption='state set' name='[state set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='level-members' level='[State]' />
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.571717' group-percentage='0.0464646' measure-ordering='alphabetic' measure-percentage='0.381818' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <edit-group-action caption='Set1' name='[Action1]'>
      <activation type='on-select' />
      <source datasource='federated.1mck8151ye9a3q1gquonh1414bra' type='datasource' />
      <params>
        <param name='selection-clear-set-option' value='show-all' />
        <param name='target-group' value='[federated.1mck8151ye9a3q1gquonh1414bra].[state set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (orders)' name='federated.1mck8151ye9a3q1gquonh1414bra' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mck8151ye9a3q1gquonh1414bra'>
            <column caption='Area wise sales' datatype='real' name='[Calculation_95138545437102081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [state set] THEN [Sales] END' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_95138545437102081]' derivation='Sum' name='[pcto:sum:Calculation_95138545437102081:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1mck8151ye9a3q1gquonh1414bra].[State]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_95138545437102081]' derivation='Sum' name='[sum:Calculation_95138545437102081:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1mck8151ye9a3q1gquonh1414bra].[sum:Calculation_95138545437102081:qk]' />
              <text column='[federated.1mck8151ye9a3q1gquonh1414bra].[pcto:sum:Calculation_95138545437102081:qk]' />
              <lod column='[federated.1mck8151ye9a3q1gquonh1414bra].[none:State:nk]' />
              <geometry column='[federated.1mck8151ye9a3q1gquonh1414bra].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mck8151ye9a3q1gquonh1414bra].[Latitude (generated)]</rows>
        <cols>[federated.1mck8151ye9a3q1gquonh1414bra].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1361F00B-C05B-41EC-BCAF-CE3CD0DFDA04}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mck8151ye9a3q1gquonh1414bra].[sum:Calculation_95138545437102081:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mck8151ye9a3q1gquonh1414bra].[State (group)]</field>
            <field>[federated.1mck8151ye9a3q1gquonh1414bra].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27D8CA1F-1BEF-4BE0-9929-2051F00EA7BE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
